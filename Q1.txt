Q1:
基于MapReduce的Kmeans

1，Map每读取一条数据就与中心做对比，求出该条记录对应的中心，然后以中心的ID为Key，该条数据为value将数据输出。

2，利用reduce的归并功能将相同的Key归并到一起，集中与该Key对应的数据，再求出这些数据的平均值，输出平均值。

3，对比reduce求出的平均值与原来的中心，如果不相同，这将清空原中心的数据文件，将reduce的结果写到中心文件中。（中心的值存在一个HDFS的文件中）删掉reduce的输出目录以便下次输出。
继续运行任务。

4，对比reduce求出的平均值与原来的中心，如果相同。则删掉reduce的输出目录，运行一个没有reduce的任务将中心ID与值对应输出。

我借鉴了MapReduce的思想，将质心与每个数据所属质心表设置为全局变量，

1. 每台机器分别计算出该台机器上的每一个数据的所属的质心，得到每个质心的权重以及数据数目；

2. 类似于中央控制器，对于每个质心，累加各台机器上的权重以及数据数目，重新计算质心

3. 重复2直到收敛

代码为distributed.py